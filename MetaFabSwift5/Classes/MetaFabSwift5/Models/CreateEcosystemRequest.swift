//
// CreateEcosystemRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateEcosystemRequest: Codable, JSONEncodable, Hashable {

    /** The name of the ecosystem you're creating. */
    public var name: String
    /** The email address associated with this ecosystem and used to login/authenticate as the ecosystem. */
    public var email: String
    /** The password to authenticate as the ecosystem. */
    public var password: String

    public init(name: String, email: String, password: String) {
        self.name = name
        self.email = email
        self.password = password
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case email
        case password
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(email, forKey: .email)
        try container.encode(password, forKey: .password)
    }
}

