//
// BatchTransferCollectionItemsRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BatchTransferCollectionItemsRequest: Codable, JSONEncodable, Hashable {

    /** An array of valid EVM based addresses to transfer items to. */
    public var addresses: [String]?
    /** An array of wallet ids within the MetaFab ecosystem to transfer items to. */
    public var walletIds: [String]?
    /** An array of unique itemIds to transfer. Each recipient will receive the same set of items provided. */
    public var itemIds: [Int]
    /** The quantities of each unique itemId to transfer. Each recipient will receive the same quantities of items provided. */
    public var quantities: [Int]

    public init(addresses: [String]? = nil, walletIds: [String]? = nil, itemIds: [Int], quantities: [Int]) {
        self.addresses = addresses
        self.walletIds = walletIds
        self.itemIds = itemIds
        self.quantities = quantities
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case addresses
        case walletIds
        case itemIds
        case quantities
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(addresses, forKey: .addresses)
        try container.encodeIfPresent(walletIds, forKey: .walletIds)
        try container.encode(itemIds, forKey: .itemIds)
        try container.encode(quantities, forKey: .quantities)
    }
}

