//
// WriteContractRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WriteContractRequest: Codable, JSONEncodable, Hashable {

    /** A contract function name. This can be any valid function from the the ABI of the contract you are interacting with. For example, `mint`. */
    public var _func: String
    /** An array of args. This is optional and only necessary if the function being invoked requires arguments per the contract ABI. For example, `[123, \"Hello\", false]`. */
    public var args: [WriteContractRequestArgsInner]?

    public init(_func: String, args: [WriteContractRequestArgsInner]? = nil) {
        self._func = _func
        self.args = args
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _func = "func"
        case args
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_func, forKey: ._func)
        try container.encodeIfPresent(args, forKey: .args)
    }
}

