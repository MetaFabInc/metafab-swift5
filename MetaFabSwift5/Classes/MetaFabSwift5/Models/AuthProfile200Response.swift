//
// AuthProfile200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AuthProfile200Response: Codable, JSONEncodable, Hashable {

    /** This field has not had a description added. */
    public var id: String?
    /** This field has not had a description added. */
    public var ecosystemId: String?
    /** This field has not had a description added. */
    public var walletId: String?
    /** This field has not had a description added. */
    public var connectedWalletId: String?
    /** This field has not had a description added. */
    public var username: String?
    /** This field has not had a description added. */
    public var accessToken: String?
    /** This field has not had a description added. */
    public var updatedAt: String?
    /** This field has not had a description added. */
    public var createdAt: String?
    /** This field has not had a description added. */
    public var walletDecryptKey: String?
    public var wallet: WalletModel?
    public var custodialWallet: WalletModel?

    public init(id: String? = nil, ecosystemId: String? = nil, walletId: String? = nil, connectedWalletId: String? = nil, username: String? = nil, accessToken: String? = nil, updatedAt: String? = nil, createdAt: String? = nil, walletDecryptKey: String? = nil, wallet: WalletModel? = nil, custodialWallet: WalletModel? = nil) {
        self.id = id
        self.ecosystemId = ecosystemId
        self.walletId = walletId
        self.connectedWalletId = connectedWalletId
        self.username = username
        self.accessToken = accessToken
        self.updatedAt = updatedAt
        self.createdAt = createdAt
        self.walletDecryptKey = walletDecryptKey
        self.wallet = wallet
        self.custodialWallet = custodialWallet
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case ecosystemId
        case walletId
        case connectedWalletId
        case username
        case accessToken
        case updatedAt
        case createdAt
        case walletDecryptKey
        case wallet
        case custodialWallet
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(ecosystemId, forKey: .ecosystemId)
        try container.encodeIfPresent(walletId, forKey: .walletId)
        try container.encodeIfPresent(connectedWalletId, forKey: .connectedWalletId)
        try container.encodeIfPresent(username, forKey: .username)
        try container.encodeIfPresent(accessToken, forKey: .accessToken)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(walletDecryptKey, forKey: .walletDecryptKey)
        try container.encodeIfPresent(wallet, forKey: .wallet)
        try container.encodeIfPresent(custodialWallet, forKey: .custodialWallet)
    }
}

