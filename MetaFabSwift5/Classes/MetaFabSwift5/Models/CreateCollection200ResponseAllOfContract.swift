//
// CreateCollection200ResponseAllOfContract.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateCollection200ResponseAllOfContract: Codable, JSONEncodable, Hashable {

    /** This field has not had a description added. */
    public var id: String?
    /** This field has not had a description added. */
    public var gameId: String?
    /** This field has not had a description added. */
    public var chain: String?
    /** This field has not had a description added. */
    public var abi: AnyCodable?
    /** This field has not had a description added. */
    public var type: String?
    /** This field has not had a description added. */
    public var address: String?
    /** This field has not had a description added. */
    public var updatedAt: String?
    /** This field has not had a description added. */
    public var createdAt: String?
    public var transactions: [TransactionModel]?

    public init(id: String? = nil, gameId: String? = nil, chain: String? = nil, abi: AnyCodable? = nil, type: String? = nil, address: String? = nil, updatedAt: String? = nil, createdAt: String? = nil, transactions: [TransactionModel]? = nil) {
        self.id = id
        self.gameId = gameId
        self.chain = chain
        self.abi = abi
        self.type = type
        self.address = address
        self.updatedAt = updatedAt
        self.createdAt = createdAt
        self.transactions = transactions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case gameId
        case chain
        case abi
        case type
        case address
        case updatedAt
        case createdAt
        case transactions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(gameId, forKey: .gameId)
        try container.encodeIfPresent(chain, forKey: .chain)
        try container.encodeIfPresent(abi, forKey: .abi)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(transactions, forKey: .transactions)
    }
}

