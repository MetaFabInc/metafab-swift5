//
// CreateLootboxManagerRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateLootboxManagerRequest: Codable, JSONEncodable, Hashable {

    public enum Chain: String, Codable, CaseIterable {
        case arbitrum = "ARBITRUM"
        case arbitrumgoerli = "ARBITRUMGOERLI"
        case arbitrumnova = "ARBITRUMNOVA"
        case avalanche = "AVALANCHE"
        case avalanchefuji = "AVALANCHEFUJI"
        case ethereum = "ETHEREUM"
        case fantom = "FANTOM"
        case fantomtest = "FANTOMTEST"
        case goerli = "GOERLI"
        case matic = "MATIC"
        case maticmumbai = "MATICMUMBAI"
        case thundercore = "THUNDERCORE"
        case thundercoretestnet = "THUNDERCORETESTNET"
    }
    /** The name of this item collection. This can be anything, such as `Production - Lootbox Manager`, `Testing - My Game Lootbox Manager`, etc. */
    public var name: String?
    /** The blockchain you want to deploy this lootbox manager on. Support for new blockchains are added over time. */
    public var chain: Chain

    public init(name: String? = nil, chain: Chain) {
        self.name = name
        self.chain = chain
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case chain
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encode(chain, forKey: .chain)
    }
}

