//
// MintCollectionItemRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MintCollectionItemRequest: Codable, JSONEncodable, Hashable {

    /** A valid EVM based address to create (mint) the item(s) for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`. */
    public var address: String?
    /** The quantity of the specified item id to create (mint). */
    public var quantity: Int
    /** Any wallet id within the MetaFab ecosystem to create (mint) the item(s) for. */
    public var walletId: String?

    public init(address: String? = nil, quantity: Int, walletId: String? = nil) {
        self.address = address
        self.quantity = quantity
        self.walletId = walletId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case quantity
        case walletId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encode(quantity, forKey: .quantity)
        try container.encodeIfPresent(walletId, forKey: .walletId)
    }
}

